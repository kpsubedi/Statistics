Keeping Tabs on WhatsApp s Encryption c t var sf startpt new Date getTime Einloggen auf heise online News heise Developer heise Netze heise Open Source heise Security c t iX Technology Review c t Digitale Fotografie c t Mac amp i Make Telepolis heise Autos heise Foto TechStage heise Download Preisvergleich Whitepapers Webcasts Stellenmarkt IT Markt Tarifrechner heise shop Artikel Archiv Zeitschriften Abo Veranstaltungen Arbeiten bei Heise if typeof jQuery undefined jQuerydocument readyfunction Support Touch Devices heisetopnavi button bind touchstart functione e preventDefault if e target is a heisetopnavi button this toggleClass active heisetopnavi header nav toggleClass hover heisetopnavi heisetopnavi button clickfunctione e preventDefault Support Keyboard heisetopnavi heisetopnavi button keyupfunctione if e which e target is a heisetopnavi button heisetopnavi heisetopnavi button toggleClass active heisetopnavi header nav toggleClass hover Open Close Menu with JavaScript for more Usability heisetopnavi removeClass no touch Logo Icon heisetopnavi heisetopnavi hover legacy mouseenterfunction var timeout id window setTimeoutfunction heisetopnavi heisetopnavi button addClass active heisetopnavi nav addClass hover body addClass refreshDOM body removeClass refreshDOM this data timeout id timeout id heisetopnavi heisetopnavi hover legacy mouseleavefunction var timeout id this data timeout id window clearTimeouttimeout id timeout id window setTimeoutfunction heisetopnavi heisetopnavi button removeClass active heisetopnavi nav removeClass hover body addClass refreshDOM body removeClass refreshDOM this data timeout id timeout id if typeof heiseLogin undefined heiseLogin login fill navigation Startseite Artikel Hotline amp FAQ Blog Aktuelle Ausgabe Alle c ts Magazin Internet Software Hardware Know how Praxis Editorial Prozessorgefl ster Schlagseite Web Tipps Kontakt Newsletter Facebook Google Twitter Netzwerkkarte c t gt Know how Fabian A Scherschel Keeping Tabs on WhatsApp s Encryption As part of an article for c t magazine the heise Security team investigated WhatsApp s end to end encryption The results show that WhatsApp might use TextSecure s exemplary encryption designed by Moxie Marlinspike but implements it in such a fashion that is of little use in the real world German version of this article
When the developers of the TextSecure crypto messenger announced at the end of that WhatsApp was now using the end to end encryption protocol developed by them this created significant interest in the media It didn t take long for this interest to completely die down however Many users are still asking themselves if they can trust the app keep their conversations private or if Facebook sucks in all of their messages To answer this question for the article WhatsApp entschl sselt in c t we looked at the encryption as it is currently used by the service Since the client software is proprietary we concentrated on the messages going over the wire For this purpose we attacked the problem from two sides We investigated the traffic going from the smartphone to WhatsApp s servers and we handled received messages with the Python tool yowsup Since its libraries are open source we could document what was decrypted where to show us the messages in plain text Man in the middle with Wireshark
While looking at the smartphone traffic we interject ourselves between the sending device and the wireless router Using ARP spoofing we trick the device into thinking we are the router and tell the router we are the smartphone a classic man in the middle attack This way all network traffic bound for and sent by the smartphone passes through us Using a plugin for Wireshark we were able to look into the data packets sent by WhatsApp However we were only able to see the management information of the Jabber like protocol used by WhatsApp The content of the messages was as we expected unreadable binary Our lab setup The smartphone sends messages to yowsup running on a desktop PC On its way to the WhatsApp server the data gets intercepted by a laptop using Wireshark The laptop then sends the traffic on to the server As other researchers have documented WhatsApp uses a proprietary encryption in transit that is based on the problematic RC algorithm This means it can be successfully attacked as RC has to be considered broken In addition to this the app seems to use the same key derived from a user password for both incoming and outgoing communication which enlarges the attack surface further This means that while the encryption in transit can in principle be broken it prevents mass data collection say on Internet backbones If someone would want to analyse WhatsApp messages en masse this leaves the WhatsApp servers as the place to do it since they decrypt the transit encryption and could therefore evaluate and store the plain text of all messages At least if there is no end to end encryption in place to prevent this If such protection is actually in place as was claimed by Moxie Marlinspike hasn t been documented until now WhatsApp never officially talked about the topic of end to end encryption EE as it applies to their service To force the issue we decided to examine messages sent by an Android phone for ourselves According to Marlinspike these messages should already be secured by EE if the receiving side supports it as well Open Source to the Rescue
The receiving end of the conversation we created ourselves The open source tool yowsup can be used to script the sending and receipt of WhatsApp messages on a server or desktop PC The current versions support an experimental moxie flag that allows to start its WhatsApp client with support for EE encryption In our case this has a clear advantage over the official client Not only yowsup s source code is open it also includes a port of TextSecure s axolotl encryption by the same developer that is open source too This allowed us to follow all steps from receiving encrypted data over the Internet to printing out the cleartext of the message This patch is used to keep tabs on yowsup during the encryption process of an incoming message For our experiment we checked out the Python code from the yowsup project s GitHub repository and patched in additional debug output in a few places Our changes cause the code to print the received ciphertext to the command line before it is decrypted To show the ciphertext which is stored in memory in binary form our logging code transforms it to hex before printing it out And we indeed observed only ciphertext being sent by Android smartphones at this point Codeflow This is how yowsup processes an incoming message that has been encrypted with TextSecure s encryption The python axolotl library is called to decrypt the ciphertext Now the code calls the axolotl library and causes it to decrypt the message Another of our changes to the code then prints out the cleartext of the message using the debugger As we could observe the decrypted message is indeed shown This shows that in our tests Android smartphones exclusively sent end to end encrypted messages to receivers capable of EE encryption And these messages were encrypted according to the TextSecure protocol Whenever we tested this with iOS clients received messages weren t protected in this way Our patched yowsup echo client shows the encrypted message coming in and then prints out the plaintext resulting from the decryption by the axolotl library As part of our analysis of the network traffic we did not find any evidence that would point to the WhatsApp client also sending the same data without EE protection to the servers At this point we do have to go into the frustrating list of things we could not show with our experimental setup For example We do not know if EE encryption is actually used in all cases where this is possible or if it is switched off when certain criteria are met such as requests by intelligence services or when the device is in use in a certain country We do know that turning off the encryption is built into the design after all WhatsApp clients sent messages without EE encryption to iPhones for example We also don t know if the secret keys generated by the WhatsApp client leave the device under certain circumstances But as long as WhatsApp can tell any client to drop its encryption and users don t have a chance to notice this getting the keys is probably a low priority anyway Uncertainty Abounds
This seems to be the core problem with WhatsApp s end to end encryption You never really know if it is actually being used Neither when sending nor when receiving messages with the official WhatsApp client is there any indication if EE encryption is in place Our lab tests only show that messages are encrypted in principle but that is not enough for dependable use in the real world Even heavier weighs the fact that as far as we know WhatsApp has never committed to guarantee its users EE encryption EE encryption with WhatsApp therefore remains a token effort fab Kommentieren Zum Themen Forum Verschl sselung Heft bestellen Permalink http heise de Version zum Drucken Das aktuelle Heft ist jetzt im Handel erh ltlich ltere Artikel k nnen Sie ber unser Zeitschriften Archiv bestellen Mehr zum Thema WhatsApp Verschl sselung Anzeige Anzeige c t ab im Handel Inhaltsverzeichnis Editorial Vorschau Software zu Artikeln c t special Alle Hefte Die App ist GRATIS im iTunes App Store bei Google Play oder bei Amazon erh ltlich und enth lt eine c t Ausgabe sowie ein c t Sonderheft als kostenlose Leseprobe Plus Abonnenten lesen c t mit ihren Abo Zugangsdaten ohne Mehrkosten auf dem Tablet Artikel Hotline Hilfe Allgemein H ufig diskutierte Themen K TV als Monitor Sofortnachrichten vollautomatisch verschicken FAQ VR Halterungen Ordner im Explorer von Windows ausblenden Raspi SD Karte unter Windows l schen Anzeige IT Angriffe proaktiv erkennen und abwehren Nerd Shirts f r Informatiker Das Insider Portal Fakten zu aktuellen IT Themen Forrester Studie Streaming Analytics Plattformen Speicherverf gbarkeit von erreichen Produktivit t erh hen und Kosten senken mit Lync Webcast In Schritten zum sichersten Netz Skype for Business macht Unternehmen produktiver heise open Im Test Ubuntu Auf den ersten Blick gleicht Ubuntu der Vorversion Unter der Haube gibt es aber einige Neuerungen wie den Umstieg auf Systemd heise Netze Internetzugangstest Netalyzr informiert detailliert ber alle Performance und Sicherheitsprobleme Ihres Internetzugangs c t Jahres Abo Ausgaben c t zum Vorzugspreis c t ein Jahr bequem und portofrei zum Vorzugspreis lesen Zustellung bereits am Samstag c t Android Auf Seiten Praxiswissen Anleitungen und Hardware Tests Android ohne Google nutzen Smartphone und Tablet ausreizen einfache Defekte selbst reparieren Smartwatches var iam data st heise cp ct sv in co Fct Fartikel FKeeping Tabs on WhatsApp s Encryption html iom ciam data var sf async config CONFIGURATION START sf async config uid sf async config domain heise de sf async config useCanonical false sf async config path window location pathname sf async config sections window location pathname split homepage sf async config authors die Redaktionen CONFIGURATION END function function loadChartbeat window sf endpt new Date getTime var e document createElement script e setAttribute language javascript e setAttribute type text javascript e setAttribute src static chartbeat com js chartbeat video js document body appendChilde var oldonload window onload window onload typeof window onload function loadChartbeat function oldonload loadChartbeat Datenschutzhinweis Impressum Kontakt Mediadaten News mobil Content Management by InterRed Copyright Heise Medien