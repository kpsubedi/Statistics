var pbpa true var translated warning string Warning Never enter your Tumblr password unless uchttps www tumblr com login ud xais the address in your web browser xa xaYou should also see a green ucTumblr Inc ud identification in the address bar xa xaSpammers and other bad guys use fake forms to steal passwords xa xaTumblr will never ask you to log in from a user us blog xa xaAre you absolutely sure you want to continue xa Security Specialist and programmer by trade Analysis of a MICROSOFT WORD INTRUDER sample execution check in and payload delivery figure margin body font family Lucida Grande Helvetica Neue Helvetica Arial sans serif font size px color background FFFFFF margin px px padding a active a focus outline content width px margin auto content header border bottom px solid content header top border bottom px solid padding px position relative content header top a title width px color font family Georgia font size px font style italic font weight normal letter spacing px text decoration none margin content header top buttons position absolute bottom px right content header top buttons a color FFFFFF font weight bold text transform uppercase text decoration none background D content header bottom font size px padding px content header bottom a color font weight bold text decoration none content newDay border top px solid padding px content newDay post margin px px content newDay post img max width content newDay date font weight bold text transform uppercase content newDay h font family Georgia font size px letter spacing px margin content newDay a h color FFF font family Georgia font size px font weight bold text decoration underline letter spacing px line height px margin content newDay a h title color content newDay quote font family Georgia font size px line height em content newDay post img max width px border px solid EEE padding px content newDay post code font size px background DEED font family Lucida Console monospace padding px px content newDay post font family Georgia font size px line height em content newDay post a color FFF text decoration none content newDay post a hover color D this is for chat content newDay post table font family Georgia font size px margin px border collapse collapse content newDay post table tr td padding vertical align top content newDay post table tr td name font weight bold text align right padding px px content newDay post table tr td words width text align left padding px px that was for chat content newDay bottom width color font family Lucida Grande Helvetica Neue Helvetica Arial sans serif font size px line height text transform uppercase content newDay bottom notes content newDay bottom tags text transform none important margin px float left content newDay bottom a color text transform none text decoration underline content newDay bottom a time text decoration underline font weight bold text transform uppercase content newDay bottom a hover text decoration underline content pagination font family Georgia font size px text align right border top px solid border bottom px solid padding px overflow hidden content pagination a button color FFFFFF font family Lucida Grande Helvetica Neue Helvetica Arial sans serif font size px font weight bold text transform uppercase text decoration none background D margin left px content pagination rss font family Lucida Grande Helvetica Neue Helvetica Arial sans serif font size px float left content pagination rss a color font weight bold content footer color EEE line height em text align right margin px overflow hidden content footer form margin auto px auto float left content footer form input text width px content footer a color EEE ol notes width border bottom solid px ccc padding px px margin px px px px list style type none ol notes a color ol notes li note color font family Lucida Grande Helvetica Neue Helvetica Arial sans serif font size px border top solid px ccc padding px ol notes li note img avatar vertical align px margin right px width px height px ol notes li note span action margin bottom px ol notes li note span action a font weight bold ol notes li note answer content ol notes li note blockquote border color eee padding px px margin px px px px ol notes li note blockquote a text decoration none ol notes li note a hover text decoration underline ul likes border bottom px solid list style type none margin padding px overflow hidden li like post width px font family Lucida Grande Helvetica Neue Helvetica Arial sans serif important font size px list style type none margin padding px float left li like post last child padding float right li like post img max width px border px solid EEE padding px li like post blockquote margin padding px border left px solid eee li like post like link a font size px color FFF li like post like link a hover color D li like post like title font size px li like post a color li like post ol li like post ul margin px padding li like post post info bottom margin px display block important li like post post info bottom a color FFF text decoration none li like post post info bottom a hover color D a arrow back a arrow forward display none important a install width px height px background urlhttp static tumblr com thpaaos dHHktjor install theme png display block position absolute top px right px Align images in the center p img display block margin auto function document getElementById rand logo src http www xa com images logo new Date getTime HOME nbsp nbsp nbsp nbsp ABOUT nbsp nbsp nbsp nbsp GITHUB nbsp nbsp nbsp nbsp TWITTER nbsp nbsp nbsp nbsp RSS nbsp nbsp nbsp nbsp Archive Search April Analysis of a MICROSOFT WORD INTRUDER sample execution check in and payload delivery On April st FireEye released a report on ldquo MWI rdquo and ldquo MWISTAT rdquo which is a sort of exploit kit for Word Documents if you will A New Word Document Exploit Kit In the article FireEye goes over MWI which is the short for ldquo Microsoft Word Intruder rsquo coded by an actor going by the handle rsquo Objekt rsquo MWI is a lsquo kit rsquo for people to use for spreading malware It can generate malicious word document exploiting any of the following CVE rsquo s CVE CVE CVE CVE The builder named MWI generates these documents which call back to a server to download malicious payloads Together with the MWI builder the author has also released MWISTAT a statistics backend and optional downloader component for MWI documents to track campaigns and spread of the documents In this article my analysis focusses on the following sample OZLA CECA X investigate doc MD cffdcecaeffc VirusTotal amp Malwr Downloadable If you would like to do the same analysis just grab the sample from Malwr which has been made downloadable More downloable samples have been listed at the end of this blog entry check out those if you want to do some more MWI sample analysis Analyzing an MWI generated document I will start my analysis by looking at VirusTotal looking at the hits we are told it is CVE CVE CVE and CVE Besides a mismatch on the list presented by FireEye it looks like we have a multi exploit document Another security researcher named ropchain responded to a tweet I send about the multi CVE identifier from VT with a good clue It seems embedding multiple vulnerabilities for RTF rsquo s is possible Let rsquo s open the document and see what kind of document we are dealing with OLE or RTF opening up the document shows the following first line RTF it is the brackets and define a group in the RTF file format these groups can be nested within each other A backslash is followed by a so called rsquo control code rsquo in our case the document starts with a group indicator bracket and the RTF control code rsquo rtf rsquo This control code indicates the start of an RTF file the number behind it indicates the specification this RTF file will follow Now that we know we have an RTF document we can start working out how it performs communication and loads the malicious payload on the affected machine MWISTAT communication The MWI samples communicate to a backend called MWISTAT This backend makes statistics of those who open the malicious documents as well as give the required payload based on a certain identifier when an exploit is succesful The statistics check in looks like this in Wireshark The server responds with a x white JPEG image Nothing interesting happens from this for the rest The second step after doing the statistic check in and succesfully exploiting the user rsquo s Microsoft Word installation is downloading a payload This request looks similar only an extra GET parameter is added named rsquo amp act rsquo The server responds to this request if it is correct in terms of identifier with a plain Windows PE no encryption is used anywhere here as seen in Wireshark MWISTAT communication Statistics check in Time to find the origin of both of these requests first we will go after the statistics check in which is quite easy to find Simply hitting CTRL F for the URL in the RTF file shows the following Based on the control code names we can guess what happens here a remote picture is loaded into a picture field This is standard behaviour and documented on a lot of places except for Microsoft official ones I couldn rsquo t find any However all documentation specifies that local paths can be used not URLs as seen here but it works anyway The fact that this include method is standard behaviour does mean that this check in will always happen you don rsquo t have to be running a vulnerable version of Word It means the bad guys are getting some proper stats on who opens their payloads with what version of office Would a new vulnerability for Word hit the web they could quickly check if its worth it rsquo to implement based on the amount of hits for that specific newly exploitable version of Office Word The User Agent tag for Microsoft Word is Microsoft Office wide determined The following is a list of the Office versions with their User Agent tag Microsoft Office rsquo MSOffice rsquo Microsoft Office rsquo MSOffice rsquo Microsoft Office rsquo MSOffice rsquo From the user agent in the PCAP we can see that my virtual machine was running Microsoft Office quite vulnerable as it was unpatched Now the fact that they would have a lot of hits for a specific version of Office doesn rsquo t always mean it is vulnerable people can still apply pathes of course MWISTAT communication Payload retrieval Now we need to find the actual payload retrieval request The problem here is that it will not be present just plain in the RTF its done after Word is exploited in some way this is also the reason why the MSOffice rsquo User Agent tag is missing as it is not Word itself downloading the payload but the attacker rsquo s shellcode I decided to not analyze the whole exploit chain in the document there is evidence of multiple exploits The easiest one would you want to follow one is CVE located all the way at the bottom of the file you can follow a writeup by McAfee running through it A Close Look at RTF Zero Day Attack CVE Shows Sophistication of Attackers
I waited for the document to exploit the vulnerable Office installation in the virtual machine when the screen looked like this I made a memorydump The memorydump was made with MoonSol rsquo s DumpIt tool you can get it here MoonSols DumpIt goes mainstream the download link is at the bottom After making the dump the first step is to check if there is any injected code in Word specifically as this is what is being exploited For this I use Volatility which is a Python based memory forensics analysis tookit I grabbed the dump and ran the following volatility command rsquo vol py f memory dmp ndash profile WinSPx D malfind rsquo the rsquo malfind rsquo argument makes volatility check for any injected code in the with the with rsquo f rsquo flag specified memory dump and mapping the memory for a Windows Service Pack bit machine in order to read it specified with the rsquo ndash profile rsquo flag The D flag specifies where to dump any injected code it finds which I set to the current working directory The output shows some interesting hits injected code in rsquo WINWORD exe rsquo which is the Microsoft Word process Time to find our C download request The C payload retrieval structure is the same as for the stats check in so simply running a grep for a section of the URL in the dumped code pinpoints the dump we want grep nHa image php process x x dmp With orange underlining we see the specific dumped injected code filename red underlined is the C request URL for the payload and the green line seems to indicate a filepath most likely for the payload when downloaded to disk We now know the specific dump containing the request to the C this dump also shows something else that is quite interesting to know the filepath where the downloaded payload goes which is rsquo C Users user AppData Local Temp ntxobj exe rsquo in this case If you load the dump in IDA you can also see some artifacts from some import resolving shellcode to grab imports from kernel it seems We can also spot the payload URL in IDA as we did in the raw dump of course And there we go we found the payload download as well as with some luck the payload location on the affected machine without diving into the exploit itself On the C my infected VM also shows up with the OPEN rsquo state which is the term used to describe the statistics check in and the LOAD rsquo state which is the payload retrieval state While the concept of MWI is simple it seems to work quite well Sadly I cannot say much about the popularity of the MWI kit as I don rsquo t know all the customers from Objekt using it All I can say is that since December last year some samples having been appearing more and more often Detecting MWI Detecting MWI payloads is quite easy both on network and filesystem level For filesystem level I rsquo ve created a YARA rule which flags the statistics check in RTF tags For detection on network level the company I work for Fox IT has released Snort IDS rules fox srt fox srt mwi rules Snort coverage for Microsoft Word Intruder MWI Samples The following is a list of samples I used while researching MWI The samples listed here come with a link to Malwr containing a downloadable sample The sample listed at the top is the sample used in this article for analysis also listed at the top rsquo OZLA CECA X investigate doc rsquo MD cffdcecaeffc VirusTotal Malwr downloadble rsquo Propozuciya doc rsquo MD bbbebaefebdb VirusTotal Malwr downloadble rsquo Refund form doc rsquo MD cafbebdbebed VirusTotal Malwr downloadble rsquo Proforma Inv doc rsquo MD baacbaa VirusTotal Malwr downloadble rsquo Information doc rsquo MD afcffbbeedcd VirusTotal Malwr downloadble rsquo voucher doc rsquo MD bbcffefadfad VirusTotal Malwr downloadble rsquo exploit doc rsquo MD ebfaeffaabbdeaba VirusTotal Malwr downloadble rsquo details doc rsquo MD fedddabad VirusTotal Malwr downloadble rsquo details doc rsquo MD eddeeecfeadadc VirusTotal Malwr downloadble am nbsp nbsp nbsp nbsp URL http tmblr co ZNKwxjhvIu View comments nbsp Notes nbsp nbsp Filed under mwi nbsp mwistat nbsp microsoft nbsp word nbsp intruder nbsp exploit nbsp cve nbsp cve nbsp cve nbsp cve nbsp cve nbsp redefinedinternet reblogged this from xaxa posted this View the discussion thread Blog comments powered by Disqus RSS feed http blog xa com rss Next post Theme is The Atlantic by Peter Vidani for Tumblr query url i encodeURIComponentlinksi href document write var gaq gaq gaq push setAccount UA gaq push setDomainName xa com gaq push trackPageview function var ga document createElement script ga type text javascript ga async true ga src https document location protocol https ssl http www google analytics com ga js var s document getElementsByTagName script s parentNode insertBeforega s function var analytics frame document getElementById ga target var analytics iframe loaded var user logged in var blog is nsfw No var addthis enabled false var eventMethod window addEventListener addEventListener attachEvent var eventer windoweventMethod var messageEvent eventMethod attachEvent onmessage message eventermessageEvent functione var message e data e data split e data split switch message case analytics iframe loaded analytics iframe loaded true postCSMessage postGAMessage postATMessage break case user logged in user logged in message postGAMessage postATMessage break false analytics frame src https secure assets tumblr com analytics html cdbdbdafcebeaaf http blog xa com function postGAMessage if analytics iframe loaded user logged in var is ajax false analytics frame contentWindow postMessage tick google analytics is ajax user logged in blog is nsfw post analysis of a microsoft word intruder sample route Fpost F Aid F Asummary join analytics frame src split analytics html function postCSMessage COMSCORE true analytics frame contentWindow postMessage enable comscore window location analytics frame src split analytics html function postATMessage if addthis enabled analytics iframe loaded analytics frame contentWindow postMessage enable addthis analytics frame src split analytics html functions s src https px srvcs tumblr com impixu T J eyJeXBlIjoidXJsIiwidXJsIjoiaHRcDpcLwvYmxvZyweDNhLmNvbVwvcGzdFwvMTENzYwODINTAXChbmFseXNpcyvZihLWpYJvcmdCbJkLWludHJZGVyLXNhbXBsZSIsInJlcXRcGUiOjAsInJvdXRlIjoiXCwbNXCaWRcLzpzdWtYXJIn U EIDMNDMIHM K adaecefcedeadefdfedbe R replace R ^ concat R escapedocument referrer slice replace new Image function w d use strict var l functionel type listener useCapture el addEventListener el addEventListenertype listener useCapture el attachEvent el attachEvent on type listener useCapture var a function if d getElementById tumblr cdx return var s d createElement script var el d getElementsByTagName script s async true s src http assets tumblr com assets scripts vendor cedexis cedexis radar js v ffccebbffcccc s type text javascript s id tumblr cdx d body appendChilds lw load a window document functions s src https px srvcs tumblr com impixu T J eyJeXBlIjoicGzdCIsInVybCIImhdHAXCcLJsbcuMHgzYSjbcLBvcRcLzExNzcMDgyNDUwNFwvYWhbHlzaXMtbYtYStaWNybNvZnQtdyZCpbnRydWRlcizYWwbGUiLCJyZXFeXBlIjowLCJybVZSIIlwvcGzdFwvOmlkXCcVtbWFyeSIsInBvcRzIjpbeyJwbNaWQiOiIxMTcNjAMjQMDQiLCJibGnaWQiOiIxMTQNDENyIsInNvdXJjZSIMzNXX U HINBGLHPJK K bcabebcccbacebbebacabd R replace R ^ concat R escapedocument referrer slice replace new Image function var s document createElement script var el document getElementsByTagName script s src https document location protocol https s http l yimg com ss rapid js s onload function var YAHOO window YAHOO if YAHOO var keys pd post id summary li b id i rad i strm test id OLD version bucket var conf spaceid client only yql enabled false keys keys nol YAHOO rapid new YAHOO in Rapidconf el parentNode insertBefores el function w d use strict var l functionel type listener useCapture el addEventListener el addEventListenertype listener useCapture el attachEvent el attachEvent on type listener useCapture var a function if d getElementById tumblr cdx return var s d createElement script var el d getElementsByTagName script s async true s src http assets tumblr com assets scripts vendor cedexis cedexis radar js v ffccebbffcccc s type text javascript s id tumblr cdx d body appendChilds lw load a window document functionTumblr var follow iframe initialized false if Tumblr FollowTeaser Tumblr PostMessageListener Don t do anything until the first initialize event Tumblr PostMessageListener initializefunctionmessage origin if follow iframe initialized message length